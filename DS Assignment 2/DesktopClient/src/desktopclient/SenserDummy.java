package desktopclient;



import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mac
 */
public class SenserDummy extends javax.swing.JFrame {

    /**
     * Creates new form SenserDummy
     */
    public SenserDummy() {
        initComponents();
        
          
            Timer timer = new Timer();
            int begin = 0;
            int timeInterval = 5000;
            timer.schedule(new TimerTask() {
                int counter = 0;
                     @Override
                    public void run() {
                         //call the method
                        co2.setText(String.valueOf(GetRandamNumberCO2()));
                        smoke.setText(String.valueOf(GetRandamNumberSmoke()));
                         
                    counter++;
                    
                }
            }, begin, timeInterval);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lebal1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        smoke = new javax.swing.JLabel();
        co2 = new javax.swing.JLabel();
        connect_btn = new javax.swing.JButton();
        check = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lebal1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lebal1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lebal1.setText("Smoke Level :");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Dummy Senser");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CO2 Level:");

        smoke.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        smoke.setText("00");

        co2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        co2.setText("00");

        connect_btn.setText("Connect");
        connect_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connect_btnActionPerformed(evt);
            }
        });

        check.setForeground(new java.awt.Color(255, 51, 51));
        check.setText("Close");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lebal1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(smoke, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(co2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(connect_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lebal1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(smoke)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(co2)
                .addGap(18, 18, 18)
                .addComponent(connect_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(check)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connect_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connect_btnActionPerformed
        // TODO add your handling code here:
          
        JOptionPane.showMessageDialog(null, "Connected");
          //Sensers s = Sensers.getInstenceSenser();
        Timer timer = new Timer();
            int begin = 0;
            int timeInterval = 2000;
            timer.schedule(new TimerTask() {
                int counter = 0;
                     @Override
                    public void run() {
                         //call the method
                    //  SenserModal senserModal = new SenserModal(11, co2Level, smokeLevel);
                      UpdateSenser(sensorID);
                       // s.setSenser(senserModal);
                       // s.printSenser();
                    counter++;
                    
                }
            }, begin, timeInterval);
            
            
        
    }//GEN-LAST:event_connect_btnActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
        System.err.println(sensorID);
        delete(sensorID);
        dispose();
    }//GEN-LAST:event_checkActionPerformed

    /**
     * @param args the command line arguments
     * 
     * 
     */
    
    int smokeLevel ;
    int co2Level ;
    int sensorID;
    int Alarm_Stat;
    
    public int GetRandamNumberSmoke(){
        Random rand = new Random();
        smokeLevel =rand.nextInt(10);
      
        return smokeLevel;
    }
    
     public int GetRandamNumberCO2(){
        Random rand = new Random();
       
        co2Level = rand.nextInt(10);
        return co2Level;
    }
     
     public void setSensorID(int id){
         this.sensorID = id;
     }
     
     public int getCO2(){
         return co2Level;
     }
     
     public int getSmoke(){
         return smokeLevel;
     }
     
     public int getSenserID(){
         return sensorID;
     }
     
     public int getAlarmStatus(){
         if(co2Level>5 || smokeLevel>5){
             Alarm_Stat = 1;
         }
         else{
             Alarm_Stat = 0;
         }
         return Alarm_Stat;
     }
     
     public void UpdateSenser(int id){
         Connection con = null;
        
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/DBNEW", "root","root1234");
            Statement st = con.createStatement();
            
            
            
            String Update = "UPDATE  alarm SET CO2='"+co2Level+"',Smoke ='"+smokeLevel+"',Alarm_Status ='"+getAlarmStatus()+"' where SensorID ='"+id+"'";
                   
            st.execute(Update);
            System.err.println("Update Completed");
        } catch (SQLException ex) {
            Logger.getLogger(ClientHome.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     
     public void delete(int senID){
         String jdbcUrl = "jdbc:mysql://localhost:3306/DBNEW";
    String username = "root";
    String password = "root1234";
    String sql = "delete from alarm where SensorID='"+senID+"'";

    try (Connection conn = DriverManager.getConnection(jdbcUrl, username, password); 
        Statement stmt = conn.createStatement();) {
      
      stmt.executeUpdate(sql);
      System.out.println("Record deleted successfully");
    } catch (SQLException e) {
      e.printStackTrace();
    }
     }
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SenserDummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SenserDummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SenserDummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SenserDummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SenserDummy().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JLabel co2;
    private javax.swing.JButton connect_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lebal1;
    private javax.swing.JLabel smoke;
    // End of variables declaration//GEN-END:variables
}
